<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    
    <!-- 定义日志文件的存储地址 -->
    <property name="LOG_HOME" value="${LOG_HOME:-logs}" />
    
    <!-- 控制台输出 -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <timestamp>
                    <timeZone>Asia/Shanghai</timeZone>
                </timestamp>
                <version/>
                <logLevel/>
                <loggerName/>
                <message/>
                <mdc>
                    <!-- 只包含我们定义的MDC字段 -->
                    <includeMdcKeyName>kind</includeMdcKeyName>
                    <includeMdcKeyName>upstream</includeMdcKeyName>
                    <includeMdcKeyName>server_url</includeMdcKeyName>
                    <includeMdcKeyName>server_method</includeMdcKeyName>
                    <includeMdcKeyName>status_code</includeMdcKeyName>
                    <includeMdcKeyName>cost</includeMdcKeyName>
                    <includeMdcKeyName>args</includeMdcKeyName>
                    <includeMdcKeyName>host</includeMdcKeyName>
                    <includeMdcKeyName>remote_addr</includeMdcKeyName>
                    <includeMdcKeyName>x-agentx-traceId</includeMdcKeyName>
                </mdc>
                <arguments/>
                <stackTrace/>
            </providers>
        </encoder>
    </appender>

    <!-- 文件输出 -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/agent-x.log</file>
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <timestamp>
                    <timeZone>Asia/Shanghai</timeZone>
                </timestamp>
                <version/>
                <logLevel/>
                <loggerName/>
                <message/>
                <mdc>
                    <!-- 只包含我们定义的MDC字段 -->
                    <includeMdcKeyName>kind</includeMdcKeyName>
                    <includeMdcKeyName>upstream</includeMdcKeyName>
                    <includeMdcKeyName>server_url</includeMdcKeyName>
                    <includeMdcKeyName>server_method</includeMdcKeyName>
                    <includeMdcKeyName>status_code</includeMdcKeyName>
                    <includeMdcKeyName>cost</includeMdcKeyName>
                    <includeMdcKeyName>args</includeMdcKeyName>
                    <includeMdcKeyName>host</includeMdcKeyName>
                    <includeMdcKeyName>remote_addr</includeMdcKeyName>
                    <includeMdcKeyName>x-agentx-traceId</includeMdcKeyName>
                </mdc>
                <arguments/>
                <stackTrace/>
            </providers>
        </encoder>
        
        <!-- 滚动策略 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 日志文件输出的文件名 -->
            <FileNamePattern>${LOG_HOME}/agent-x.%d{yyyy-MM-dd}.%i.log</FileNamePattern>
            <!-- 日志文件保留天数 -->
            <MaxHistory>30</MaxHistory>
            <!-- 单个日志文件最大大小 -->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!-- 总的日志文件大小 -->
            <totalSizeCap>10GB</totalSizeCap>
        </rollingPolicy>
    </appender>

    <!-- 异步日志输出 -->
    <appender name="ASYNC_FILE" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>1024</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="FILE"/>
        <!-- 是否包含调用者信息 -->
        <includeCallerData>false</includeCallerData>
    </appender>

    <!-- 错误日志单独输出 -->
    <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/agent-x-error.log</file>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <timestamp>
                    <timeZone>Asia/Shanghai</timeZone>
                </timestamp>
                <version/>
                <logLevel/>
                <loggerName/>
                <message/>
                <mdc/>
                <arguments/>
                <stackTrace/>
            </providers>
        </encoder>
        
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>${LOG_HOME}/agent-x-error.%d{yyyy-MM-dd}.%i.log</FileNamePattern>
            <MaxHistory>30</MaxHistory>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <totalSizeCap>5GB</totalSizeCap>
        </rollingPolicy>
    </appender>

    <!-- 开发环境配置 -->
    <springProfile name="!prod">
        <root level="INFO">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="ASYNC_FILE"/>
            <appender-ref ref="ERROR_FILE"/>
        </root>
        
        <!-- 调试项目相关日志 -->
        <logger name="org.xhy" level="DEBUG" additivity="false">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="ASYNC_FILE"/>
            <appender-ref ref="ERROR_FILE"/>
        </logger>
    </springProfile>

    <!-- 生产环境配置 -->
    <springProfile name="prod">
        <root level="INFO">
            <appender-ref ref="ASYNC_FILE"/>
            <appender-ref ref="ERROR_FILE"/>
        </root>
        
        <logger name="org.xhy" level="INFO" additivity="false">
            <appender-ref ref="ASYNC_FILE"/>
            <appender-ref ref="ERROR_FILE"/>
        </logger>
    </springProfile>
    
</configuration>
