# 多阶段构建：第一阶段 - 构建应用
FROM maven:3.9.6-eclipse-temurin-17 AS builder

# 设置工作目录
WORKDIR /build

# 先复制pom.xml，下载依赖（利用Docker缓存层）
COPY pom.xml .
RUN mvn dependency:go-offline -B -q

# 然后复制源代码（这样依赖层可以被缓存）
COPY src ./src

# 构建应用（跳过测试，只有源码变化时才重新构建）
RUN mvn clean package -DskipTests -B -q

# 多阶段构建：第二阶段 - 运行时镜像
FROM openjdk:17-jdk-slim

# 设置工作目录
WORKDIR /app

# 安装必要的系统工具
RUN apt-get update && apt-get install -y \
    curl \
    wget \
    && rm -rf /var/lib/apt/lists/*

# 从构建阶段复制jar文件
COPY --from=builder /build/target/agent-x-*.jar app.jar

# 创建日志目录
RUN mkdir -p /app/logs

# 暴露应用端口
EXPOSE 8080

# 设置JVM参数
ENV JAVA_OPTS="-Xms512m -Xmx1024m -Djava.security.egd=file:/dev/./urandom"

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8080/actuator/health || exit 1

# 启动应用
ENTRYPOINT ["sh", "-c", "java $JAVA_OPTS -jar app.jar"] 