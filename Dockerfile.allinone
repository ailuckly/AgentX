# AgentX All-in-One 镜像
# 包含前端、后端和服务编排

# 多阶段构建 - 前端
FROM node:18-alpine AS frontend-builder
WORKDIR /app
COPY agentx-frontend-plus/package*.json ./
RUN npm install --legacy-peer-deps
COPY agentx-frontend-plus/ ./
RUN npm run build

# 多阶段构建 - 后端
FROM maven:3.9-eclipse-temurin-17 AS backend-builder

WORKDIR /app
COPY AgentX/pom.xml ./
COPY AgentX/src ./src
RUN mvn clean package -DskipTests

# 最终运行镜像
FROM node:18-alpine

# 安装必要工具
RUN apk add --no-cache \
    openjdk17-jre \
    curl \
    docker \
    docker-compose \
    supervisor \
    bash

# 复制前端构建产物 (Next.js standalone)
COPY --from=frontend-builder /app/.next/standalone /app/frontend/
COPY --from=frontend-builder /app/.next/static /app/frontend/.next/static
COPY --from=frontend-builder /app/public /app/frontend/public

# 复制后端 JAR 文件
COPY --from=backend-builder /app/target/*.jar /app/backend.jar

# 复制外部服务编排文件
COPY docker-compose.standalone.yml /app/docker-compose.yml
COPY .env.example /app/.env.example

# 创建 supervisor 配置
RUN mkdir -p /etc/supervisor/conf.d && \
    cat > /etc/supervisor/conf.d/supervisord.conf << 'EOF'
[supervisord]
nodaemon=true
user=root

[program:frontend]
command=node server.js
directory=/app/frontend
autostart=true
autorestart=true
stdout_logfile=/var/log/frontend.out.log
stderr_logfile=/var/log/frontend.err.log
environment=PORT=3000

[program:backend]
command=java -jar /app/backend.jar
autostart=true
autorestart=true
stdout_logfile=/var/log/backend.out.log
stderr_logfile=/var/log/backend.err.log
environment=SPRING_PROFILES_ACTIVE=docker

[program:external-services]
command=docker-compose -f /app/docker-compose.yml up
autostart=true
autorestart=true
stdout_logfile=/var/log/external.out.log
stderr_logfile=/var/log/external.err.log
directory=/app
EOF

# 暴露端口
EXPOSE 3000 8080 8081 5432 5433 8005

# 设置工作目录
WORKDIR /app

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=90s --retries=3 \
    CMD curl -f http://localhost:3000 || exit 1

# 启动 supervisor
CMD ["supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]